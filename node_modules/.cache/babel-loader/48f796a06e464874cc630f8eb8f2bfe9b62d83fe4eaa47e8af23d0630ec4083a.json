{"ast":null,"code":"import axios from 'axios';\nconst client = axios.create({\n  baseURL: `${process.env.VUE_APP_GITHUB_ENDPOINT}`,\n  headers: {\n    'Accept': 'application/vnd.github.v3+json',\n    'Content-Type': 'application/json',\n    'Authorization': `token ${process.env.VUE_APP_GITHUB_TOKEN}`\n  }\n});\nexport default {\n  name: 'IssueList',\n  data() {\n    return {\n      issues: []\n    };\n  },\n  methods: {\n    getIssues() {\n      client.get('/issues').then(res => {\n        this.issues = res.data;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","client","create","baseURL","process","env","VUE_APP_GITHUB_ENDPOINT","headers","VUE_APP_GITHUB_TOKEN","name","data","issues","methods","getIssues","get","then","res"],"sources":["src/views/IssueList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Issue List</h1>\r\n        <el-button type=\"success\" @click=\"getIssues()\">Get Issues</el-button>\r\n        <el-row :gutter=\"12\">\r\n            <el-col :span=\"12\" v-for=\"issue in issues\" :key=\"issue.id\">\r\n                <el-card class=\"box-card\" shadow=\"hover\" style=\"margin: 5px 0;\">\r\n                    <el-row :gutter=\"12\">\r\n                        <el-col :span=\"21\">{{ issue.title }}</el-col>\r\n                        <el-col :span=\"3\">\r\n                            <el-button type=\"success\" icon=\"el-icon-check\" circle></el-button>\r\n                        </el-col>\r\n                    </el-row>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nconst client = axios.create({\r\n    baseURL: `${process.env.VUE_APP_GITHUB_ENDPOINT}`,\r\n    headers: {\r\n        'Accept': 'application/vnd.github.v3+json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `token ${process.env.VUE_APP_GITHUB_TOKEN}`\r\n    },\r\n})\r\n\r\nexport default {\r\n    name: 'IssueList',\r\n    data() {\r\n        return {\r\n            issues: []\r\n        }\r\n    },\r\n    methods: {\r\n        getIssues() {\r\n            client.get('/issues')\r\n                .then((res) => {\r\n                    this.issues = res.data;\r\n                })\r\n        }\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"AAoBA,OAAAA,KAAA;AAEA,MAAAC,MAAA,GAAAD,KAAA,CAAAE,MAAA;EACAC,OAAA,KAAAC,OAAA,CAAAC,GAAA,CAAAC,uBAAA;EACAC,OAAA;IACA;IACA;IACA,0BAAAH,OAAA,CAAAC,GAAA,CAAAG,oBAAA;EACA;AACA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACAZ,MAAA,CAAAa,GAAA,YACAC,IAAA,CAAAC,GAAA;QACA,KAAAL,MAAA,GAAAK,GAAA,CAAAN,IAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}